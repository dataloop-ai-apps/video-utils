{
  "displayName": "[Video Utils] - Stitching",
  "name": "video-utils-stitching",
  "description": "Video Utils - Stitching is a collection of tools for video manipulation. It includes tools for merging frames into a video and merging videos into a single video.",
  "version": "1.1.2",
  "codebase": {
    "type": "git",
    "gitUrl": "https://github.com/dataloop-ai-apps/video-utils.git",
    "gitTag": "1.1.2"
  },
  "scope": "public",
  "attributes": {
    "Category": "Application",
    "Hub": "Dataloop",
    "Provider": "Dataloop",
    "Deployed By": "Dataloop",
    "Application Type": "Pipeline Node",
    "Media Type": [
      "Video",
      "Image"
    ]
  },
  "components": {
    "pipelineNodes": [
      {
        "scope": "node",
        "name": "frames-to-video",
        "invoke": {
          "type": "function",
          "namespace": "frames-to-video.frames-to-video.frames_to_vid"
        },
        "categories": [
          "video-utils"
        ]
      },
      {
        "scope": "node",
        "name": "videos-to-video",
        "invoke": {
          "type": "function",
          "namespace": "videos-to-video.videos-to-video.videos_to_video"
        },
        "categories": [
          "video-utils"
        ]
      }
    ],
    "modules": [
      {
        "name": "frames-to-video",
        "entryPoint": "frames_to_video/frames_to_video.py",
        "className": "ServiceRunner",
        "initInputs": [],
        "functions": [
          {
            "name": "frames_to_vid",
            "description": "frames to video tool",
            "input": [
              {
                "type": "Item",
                "name": "item"
              },
              {
                "type": "Json",
                "name": "dql_filter"
              },
              {
                "type": "String",
                "name": "output_folder"
              },
              {
                "type": "String",
                "name": "output_video_type"
              },
              {
                "type": "Integer",
                "name": "fps"
              }
            ],
            "output": [
              {
                "type": "Item",
                "name": "item"
              }
            ],
            "displayIcon": "qa-sampling",
            "displayName": "Frames to Video Merge"
          }
        ]
      },
      {
        "name": "videos-to-video",
        "entryPoint": "videos_to_video/videos_to_video.py",
        "className": "ServiceRunner",
        "initInputs": [],
        "functions": [
          {
            "name": "videos_to_video",
            "description": "videos to video tool",
            "input": [
              {
                "type": "Item",
                "name": "item"
              },
              {
                "type": "Json",
                "name": "dql_filter"
              },
              {
                "type": "String",
                "name": "output_folder"
              }
            ],
            "output": [
              {
                "type": "Item",
                "name": "item"
              }
            ],
            "displayIcon": "qa-sampling",
            "displayName": "Videos to Video Merge"
          }
        ]
      }
    ],
    "services": [
      {
        "name": "frames-to-video",
        "moduleName": "frames-to-video",
        "runtime": {
          "podType": "regular-xs",
          "runnerImage": "dataloopai/dtlpy-agent:cpu.py3.8.opencv4.7",
          "numReplicas": 1,
          "concurrency": 10,
          "pyPackages": {},
          "singleAgent": false,
          "autoscaler": {
            "type": "rabbitmq",
            "minReplicas": 0,
            "maxReplicas": 2,
            "queueLength": 10
          },
          "preemptible": false
        },
        "maxAttempts": 3,
        "executionTimeout": 172800,
        "drainTime": 600,
        "onReset": "failed",
        "runExecutionAsProcess": false,
        "operation": "none"
      },
      {
        "name": "videos-to-video",
        "moduleName": "videos-to-video",
        "runtime": {
          "podType": "regular-xs",
          "runnerImage": "dataloopai/dtlpy-agent:cpu.py3.8.opencv4.7",
          "numReplicas": 1,
          "concurrency": 10,
          "pyPackages": {},
          "singleAgent": false,
          "autoscaler": {
            "type": "rabbitmq",
            "minReplicas": 0,
            "maxReplicas": 2,
            "queueLength": 10
          },
          "preemptible": false
        },
        "maxAttempts": 3,
        "executionTimeout": 172800,
        "drainTime": 600,
        "onReset": "failed",
        "runExecutionAsProcess": false,
        "operation": "none"
      }
    ]
  }
}